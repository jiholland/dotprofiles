#!/bin/zsh

# =================== Export =====================

if (test -d /opt/homebrew/bin); then       # Add homebrew's bin and sbin to path.
  export PATH="/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
fi

if (which pyenv &>/dev/null); then         # Add pyenv's bin to path.
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init --path)"
fi

if (which brew &>/dev/null); then          # Make homebrew’s completions available in zsh.
  export FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"
fi

if (which vim &>/dev/null); then           # Set vim as default editor.
  export VISUAL='vim'
fi

export LANG='POSIX'                        # Use posix encoding for console output.
export LSCOLORS='GxFx'                     # Set colors for ls command (directory and symbolic link).

# =================== General ==================

autoload -U compinit; compinit             # Enable the zsh completion system.
unsetopt BEEP                              # Disable terminal bell.
setopt AUTO_CD                             # Change directory without using cd.
setopt PROMPT_SUBST                        # Enable parameter expansion, command substitution and arithmetic expansion in the prompt.

# =================== Alias ====================

alias ls='ls --color'                      # Add colors to list directory contents command. Colors are based on LSCOLORS.
alias ll='ls -l'                           # List files in the long format.
alias l='ls -la'                           # List files in the long format and include directory entries whose names begin with a dot (‘.’). 
alias c='clear'

if (which vim &>/dev/null); then
  alias vi='vim'
fi

if (which git &>/dev/null); then
  alias s='git status'
fi

if (which htop &>/dev/null); then
  alias top='htop'
fi

if (which tree &>/dev/null); then          # Add colors to tree command.
  alias tree='tree -C'
fi

if (test -r ~/.aliases); then              # Source additional aliases.
  source ~/.aliases
fi

# =================== Git branch ===============

if (which git &>/dev/null); then
  parse_git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'; }
else
  parse_git_branch() { :; }
fi

# =================== Prompt ===================

nocolor='%f'                               # All attributes off.
green='%F{green}'                          # Green frontground color.
yellow='%F{yellow}'                        # Yellow frontground color.
cyan='%F{cyan}'                            # Cyan frontground color.

open_brk='${nocolor}['                     # The '[' bracket.
closed_brk='${nocolor}]'                   # The ']' bracket.
username='${green}%n'                      # The username of the current user.
at='${nocolor}@'                           # The '@' sign.
hostname='${nocolor}%m'                    # The hostname up to the first `.'
working_dir='${cyan}%2~'                   # The current working directory, with $HOME abbreviated with a tilde (2 trailing components of current dir).
git_branch='${yellow}$(parse_git_branch)'  # The current git branch.
prompt_indicator='${nocolor}%(!.#.$)'      # A '#' if the shell is running with privileges, a '$' if not.

PS1="${open_brk}${username}${at}${hostname} ${working_dir} ${git_branch}${closed_brk}${prompt_indicator} "
