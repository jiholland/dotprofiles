# ~/.zshrc

# ==================== General ====================

if [ -z "$ZSHRC_SOURCED" ]; then           # Prevent doublesourcing.
  ZSHRC_SOURCED="yes"
fi

[ -z "$PS1" ] && return                    # If not running interactively, don't do anything.

autoload -Uz compinit; compinit            # Enable the zsh completion system.
export LANG=POSIX                          # Use posix encoding for console output (locale).
export HISTFILE="$HOME/.zsh_history"       # The file to save the history.
export SAVEHIST=2000                       # Maximum number of history events to save in history file.
export HISTSIZE=2000                       # Maximum number of events stored in the internal history list.
setopt APPEND_HISTORY                      # Append history list to history file.
unsetopt BEEP                              # Disable terminal bell.
setopt AUTO_CD                             # Change directory without using cd command.

if (which pyenv &>/dev/null); then         # Install pyenv as shell function, enable shims and autocompletion.
  eval "$(pyenv init -)"
fi

# ==================== Prompt =====================

if (which git &>/dev/null); then           # Git branch function for prompt.
  git_branch() { git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/(\1) /'; }
else
  git_branch() { :; }
fi

setopt PROMPT_SUBST                        # Enable parameter expansion, command substitution and arithmetic expansion in the prompt.

if [[ "$TERM" == "xterm"*||"vte"* ]]       # If colors are "supported", set prompt with colors: [username@hostname working-dir (git-branch) ]prompt-indicator
then
  PS1="%f[%F{green}%n%f@%f%m %F{cyan}%2~ %F{yellow}\$(git_branch)%f]%f%(!.#.$) "
else
  PS1="[%n@%m %2~ \$(git_branch)]%(!.#.$) "
fi

# ==================== Aliases ====================

if [[ "$TERM" == "xterm"*||"vte"* ]]       # If colors are "supported", add colors to various commands.
then
  export LSCOLORS='GxFx'                   # Colors for ls command (directory, symbolic link and leave the rest to default values).
  alias ls='ls --color' 
  alias grep='grep --color'
  if (which tree &>/dev/null); then
    alias tree='tree -C'
  fi
fi

alias ll='ls -l'                           # List files in the long format.
alias la='ls -laF'                         # Long format, include dot ('.') directories and display prefix.
alias c=clear

if (which vim &>/dev/null); then
  alias vi='vim'
  export VISUAL='vim'                      # Set vim as default visual editor.
fi

if (which git &>/dev/null); then
  alias s='git status'
fi

if [ -r "$HOME/.aliases" ]; then
  source "$HOME/.aliases"                  # Source additional aliases.
fi
