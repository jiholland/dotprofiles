---
# tasks file for dot

- name: Gather facts.
  ansible.builtin.setup:
    gather_subset:
      - min

- name: Create temporary directory.
  ansible.builtin.tempfile:
    path: "{{ dot_temp_dir }}"
    state: directory
  run_once: true
  register: __dot_temp_dir_output
  notify: Remove temporary directory.
  check_mode: false

- name: Checkout git repo.
  ansible.builtin.git:
    repo: "{{ dot_git_repo }}"
    dest: "{{ __dot_temp_dir_output['path'] }}"
    accept_newhostkey: "{{ dot_git_accept_newhostkey }}"
    depth: 1
    version: "{{ dot_git_version }}"
  run_once: true
  check_mode: false

- name: Install dotbashprofiles if shell is bash.
  ansible.builtin.template:
    src: "{{ __dot_temp_dir_output['path'] }}/.{{ dot_item }}"
    dest: "{{ ansible_facts['user_dir'] }}/.{{ dot_item }}"
    mode: u=rw,g=r,o=r
    backup: true
  when: ansible_facts['user_shell'] is ansible.builtin.search('bash')
  loop: "{{ dot_bash_profiles }}"
  loop_control:
    loop_var: dot_item

- name: Ensure directory for tmux is present.
  ansible.builtin.file:
    path: "{{ ansible_facts['user_dir'] }}/.config/tmux"
    mode: u=xrw,g=xr,o=x
    state: directory

- name: Install configuration for tmux.
  ansible.builtin.template:
    src: "{{ __dot_temp_dir_output['path'] }}/.config/tmux/tmux.conf"
    dest: "{{ ansible_facts['user_dir'] }}/.config/tmux/tmux.conf"
    mode: u=rw,g=r,o=r
    backup: true

- name: Ensure directories for nvim are present.
  ansible.builtin.file:
    path: "{{ dot_item }}"
    state: directory
    mode: u=xrw,g=xr,o=x
  loop: "{{ __dot_nvim_directories }}"
  loop_control:
    loop_var: dot_item

- name: Install configuration files for nvim.
  ansible.builtin.copy:
    src: "{{ __dot_temp_dir_output['path'] }}/.config/nvim/{{ dot_item }}"
    dest: "{{ ansible_facts['user_dir'] }}/.config/nvim/{{ dot_item }}"
    mode: u=rw,g=r,o=r
    backup: true
  loop: "{{ dot_nvim_files }}"
  loop_control:
    loop_var: dot_item

- name: Clone repositories containing plugins for nvim.
  ansible.builtin.git:
    repo: "{{ dot_item['repo'] }}"
    dest: "{{ ansible_facts['user_dir'] }}/.local/share/nvim/site/pack/plugins/start/{{ dot_item['dest'] }}"
    depth: 1
    update: true
    force: true
    version: "{{ dot_item['version'] }}"
  loop: "{{ dot_nvim_plugins }}"
  loop_control:
    loop_var: dot_item
    label: "{{ dot_item['repo'] }}"
