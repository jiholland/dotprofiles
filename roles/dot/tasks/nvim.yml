---
# tasks file for dot

- name: nvim | Backup nvim.
  block:

    - name: nvim | Backup nvim.
      ansible.builtin.copy:
        src: "{{ ansible_facts['user_dir'] }}/.config/nvim/"
        dest: "{{ ansible_facts['user_dir'] }}/.config/nvim.{{ ansible_facts['date_time']['epoch'] }}"
        mode: "{{ dot_mode_dir }}"
        remote_src: false

    - name: nvim | Delete nvim directory.
      ansible.builtin.file:
        path: "{{ ansible_facts['user_dir'] }}/.config/nvim/"
        state: absent

  rescue:

    - name: nvim | Ensure directory for nvim is present.
      ansible.builtin.file:
        path: "{{ ansible_facts['user_dir'] }}/.config/nvim"
        mode: "{{ dot_mode_dir }}"
        state: directory


- name: nvim | Ensure directories are present.
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "{{ dot_mode_dir }}"
  loop: "{{ __dot_nvim_directories }}"

- name: nvim | Install configuration files.
  ansible.builtin.copy:
    src: "{{ item['src'] }}"
    dest: "{{ item['dest'] }}"
    mode: "{{ dot_mode_file }}"
  loop: "{{ __dot_nvim_files }}"

- name: nvim | Install plugins.
  ansible.builtin.git:
    repo: "{{ item['repo'] }}"
    dest: "{{ ansible_facts['user_dir'] }}/.local/share/nvim/site/pack/plugins/start/{{ item['dest'] }}"
    depth: 1
    update: true
    force: true
    version: "{{ item['version'] }}"
  loop: "{{ dot_nvim_plugins }}"
